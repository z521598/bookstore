<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.lsq.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="cn.com.lsq.po.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="orderNumber" property="ordernumber" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="deliveryTime" property="deliverytime" jdbcType="TIMESTAMP" />
    <result column="payTime" property="paytime" jdbcType="TIMESTAMP" />
    <result column="receivingTime" property="receivingtime" jdbcType="TIMESTAMP" />
    <result column="trackingNumber" property="trackingnumber" jdbcType="VARCHAR" />
    <result column="express_id" property="expressId" jdbcType="VARCHAR" />
    <result column="expenses" property="expenses" jdbcType="DOUBLE" />
    <result column="totalCost" property="totalcost" jdbcType="DOUBLE" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap type="cn.com.lsq.po.Order" id="OrderdetailResultMap">
  	<id column="id" property="id"/>
  	<result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="orderNumber" property="ordernumber" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="deliveryTime" property="deliverytime" jdbcType="TIMESTAMP" />
    <result column="payTime" property="paytime" jdbcType="TIMESTAMP" />
    <result column="receivingTime" property="receivingtime" jdbcType="TIMESTAMP" />
    <result column="trackingNumber" property="trackingnumber" jdbcType="VARCHAR" />
    <result column="express_id" property="expressId" jdbcType="VARCHAR" />
    <result column="expenses" property="expenses" jdbcType="DOUBLE" />
    <result column="totalCost" property="totalcost" jdbcType="DOUBLE" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
	<result column="ename" property="ename" jdbcType="VARCHAR"  />
    <collection property="orderdetaillist" ofType="cn.com.lsq.po.Orderdetail">
	    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
	    <result column="goods_number" property="goodsNumber" jdbcType="INTEGER" />
	    <result column="totalPrice" property="totalprice" jdbcType="DOUBLE" />
	    <result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="gname" property="gname" jdbcType="VARCHAR"  />
	</collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, orderNumber, createtime, address, deliveryTime, payTime, receivingTime, 
    trackingNumber, express_id, expenses, totalCost, note, state
  </sql>
  <select id="selectByTime" resultMap="OrderdetailResultMap" parameterType="java.util.Date">
  	SELECT `order`.*,orderdetail.order_id,goods_id,goods_number,totalPrice,goods.name AS gname
  	 FROM `orderdetail`,`order`,`goods` WHERE order.id = orderdetail.order_id  AND orderdetail.goods_id = goods.id AND receivingTime BETWEEN #{starttime} AND #{overtime}
  </select>
  <select id="selectByTimeWater" resultMap="OrderdetailResultMap" >
  	SELECT `order`.*,orderdetail.order_id,goods_id,goods_number,totalPrice,goods.name AS gname
  	 FROM `orderdetail`,`order`,`goods` WHERE order.id = orderdetail.order_id  AND orderdetail.goods_id = goods.id AND receivingTime BETWEEN #{starttime} AND #{overtime} limit #{lastdata},#{pageSize}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select
  	`order`.*,express.name,startingPrice
  	from `order`,`express` where order.express_id = express.id order by createtime desc
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    `order`.*,express.name,startingPrice
    from `order`,`express`
    where id = #{id,jdbcType=INTEGER} and order.express_id = express.id
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select
  	`order`.*,express.name,startingPrice
    from `order`,`express`
    where user_id = #{value} and order.express_id = express.id
  </select>
  <select id="selectByOrderId" resultMap="OrderdetailResultMap" parameterType="java.lang.Integer">
  	  	 SELECT `order`.*,orderdetail.order_id,goods_id,goods_number,totalPrice,goods.name as gname,express.name AS ename
  	 FROM `orderdetail`,`order`,`goods`,`express` WHERE order.id = orderdetail.order_id AND order.id=#{value} AND orderdetail.goods_id = goods.id AND order.express_id = express.id 	
  </select>
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.lsq.po.Order" >
    insert into `order` (id, user_id, orderNumber, 
      createtime, address, deliveryTime, 
      payTime, receivingTime, trackingNumber, 
      express_id, expenses, totalCost, 
      note, state)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{ordernumber,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, #{deliverytime,jdbcType=TIMESTAMP}, 
      #{paytime,jdbcType=TIMESTAMP}, #{receivingtime,jdbcType=TIMESTAMP}, #{trackingnumber,jdbcType=VARCHAR}, 
      #{expressId,jdbcType=VARCHAR}, #{expenses,jdbcType=DOUBLE}, #{totalcost,jdbcType=DOUBLE}, 
      #{note,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.lsq.po.Order" >
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="ordernumber != null" >
        orderNumber,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="deliverytime != null" >
        deliveryTime,
      </if>
      <if test="paytime != null" >
        payTime,
      </if>
      <if test="receivingtime != null" >
        receivingTime,
      </if>
      <if test="trackingnumber != null" >
        trackingNumber,
      </if>
      <if test="expressId != null" >
        express_id,
      </if>
      <if test="expenses != null" >
        expenses,
      </if>
      <if test="totalcost != null" >
        totalCost,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="deliverytime != null" >
        #{deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="paytime != null" >
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivingtime != null" >
        #{receivingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackingnumber != null" >
        #{trackingnumber,jdbcType=VARCHAR},
      </if>
      <if test="expressId != null" >
        #{expressId,jdbcType=VARCHAR},
      </if>
      <if test="expenses != null" >
        #{expenses,jdbcType=DOUBLE},
      </if>
      <if test="totalcost != null" >
        #{totalcost,jdbcType=DOUBLE},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.lsq.po.Order" >
    update `order`
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ordernumber != null" >
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="deliverytime != null" >
        deliveryTime = #{deliverytime,jdbcType=TIMESTAMP},
      </if>
      <if test="paytime != null" >
        payTime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivingtime != null" >
        receivingTime = #{receivingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="trackingnumber != null" >
        trackingNumber = #{trackingnumber,jdbcType=VARCHAR},
      </if>
      <if test="expressId != null" >
        express_id = #{expressId,jdbcType=VARCHAR},
      </if>
      <if test="expenses != null" >
        expenses = #{expenses,jdbcType=DOUBLE},
      </if>
      <if test="totalcost != null" >
        totalCost = #{totalcost,jdbcType=DOUBLE},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.lsq.po.Order" >
    update `order`
    set user_id = #{userId,jdbcType=INTEGER},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      deliveryTime = #{deliverytime,jdbcType=TIMESTAMP},
      payTime = #{paytime,jdbcType=TIMESTAMP},
      receivingTime = #{receivingtime,jdbcType=TIMESTAMP},
      trackingNumber = #{trackingnumber,jdbcType=VARCHAR},
      express_id = #{expressId,jdbcType=VARCHAR},
      expenses = #{expenses,jdbcType=DOUBLE},
      totalCost = #{totalcost,jdbcType=DOUBLE},
      note = #{note,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>